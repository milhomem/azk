{"version":3,"file":"run.js","sources":["../../../src/docker/run.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"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","sourcesContent":["import { _, async, config, utils } from 'azk';\nvar path = require('path');\n\nfunction new_resize(container) {\n  return function() {\n    var dimensions = {\n      h: process.stdout.rows,\n      w: process.stderr.columns\n    }\n\n    if (dimensions.h != 0 && dimensions.w != 0) {\n      container.resize(dimensions)\n    }\n  }\n}\n\nexport function run(docker, Container, image, cmd, opts = { }) {\n  var container   = null;\n  var docker_opts = opts.docker || { start: {}, create: {} };\n\n  opts.stdout = opts.stdout || process.stdout;\n  opts.stderr = opts.stderr || opts.stdout;\n  var daemon  = opts.daemon || false;\n  var interactive = opts.stdin ? true : false;\n  var nameservers = opts.dns || null;\n\n  //// Force daemon mode\n  if (daemon) {\n    interactive = false;\n    opts.tty    = false;\n    opts.rm     = false;\n  }\n\n  // Volumes\n  var volumes = {}, v_binds = [];\n  _.each(opts.volumes || {}, (target, point) => {\n    volumes[point] = {};\n    v_binds.push( `${target}:${point}` );\n  });\n\n  // Ports\n  var ports = {}, p_binds = {};\n  _.each(opts.ports || [], function(bind, port) {\n    ports[port] = {};\n    p_binds[port] = bind;\n  });\n\n  // Annotations\n  var annotations = opts.annotations || { azk : {} };\n  annotations.azk.type = annotations.azk.type || \"run\";\n\n  // Container name and envs\n  var name = opts.name || Container.serializeAnnotations(annotations);\n  var envs = _.merge(Container.envsFromAnnotations(annotations), {\n    AZK_NAME: name,\n     AZK_ENV: config('docker:namespace').split('.')[1],\n  })\n  opts.env = _.merge(envs, opts.env || {});\n\n  var env  = _.reduce(opts.env, function(sum, value, key) {\n    sum.push(key + \"=\" + value)\n    return sum\n  }, []);\n\n  // Create container options\n  var optsc = {\n    Image: image,\n    Cmd: cmd,\n    'AttachStdin': interactive,\n    'AttachStdout': opts.stdout ? true : false,\n    'AttachStderr': opts.stderr ? true : false,\n    'Tty': opts.tty,\n    'OpenStdin': interactive,\n    'Volumes': volumes,\n    'ExposedPorts': ports,\n    'Env': env,\n    'WorkingDir': opts.working_dir || \"/\",\n    'name': name,\n  }\n\n  return async(docker, function* (notify) {\n    container = yield this.createContainer(_.merge(optsc, docker_opts.create || {}));\n\n    var c_notify = (type, ...data) => {\n      return notify({ type, context: \"container_run\", id: container.id, data: data });\n    }\n    c_notify(\"created\");\n    notify({type: \"created\", id: container.id});\n\n    // Resize tty\n    if (interactive) {\n      var resize = new_resize(container);\n      var isRaw  = process.stdin.isRaw;\n    }\n\n    // Attach container\n    if (!daemon) {\n      var stream = yield container.attach({\n        log: true, stream: true,\n        stdin: interactive, stdout: true, stderr: true\n      });\n      c_notify(\"attached\");\n\n      if (interactive) {\n        stream.pipe(opts.stdout);\n      } else {\n        container.modem.demuxStream(stream, opts.stdout, opts.stderr);\n      }\n\n      // Connect stdin\n      if (interactive) {\n        opts.stdin.resume();\n        if (opts.tty) {\n          try {\n            opts.stdin.setRawMode(true)\n          } catch(err) {};\n        }\n\n        if (opts.stdin.custom_pipe) {\n          opts.stdin.custom_pipe(stream);\n        } else {\n          opts.stdin.pipe(stream);\n        }\n\n        c_notify(\"stdin_pipe\", { stdin: opts.stdin, stream });\n      }\n    }\n\n    // Start container\n    var start_opts = {\n      Dns: nameservers,\n      Binds: v_binds,\n      PortBindings: p_binds,\n    };\n\n    yield container.start(_.merge(start_opts, docker_opts.start || {}));\n    c_notify(\"started\");\n\n    if (!daemon) {\n      if (interactive && opts.tty) {\n        resize();\n        opts.stdout.on('resize', resize);\n      }\n\n      // Wait container\n      c_notify(\"wait\");\n      yield container.wait();\n      if (interactive) {\n        opts.stdout.removeListener('resize', resize);\n        opts.stdin.removeAllListeners();\n        if (opts.tty)\n          try {\n            opts.stdin.setRawMode(isRaw);\n          } catch(err) {};\n        opts.stdin.resume();\n        stream.end();\n      }\n    }\n\n    return container;\n  });\n}\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","return $__placeholder__0(\n            $__placeholder__1,\n            this);","$traceurRuntime.generatorWrap","function($ctx) {\n      while (true) $__placeholder__0\n    }","return $__placeholder__0","$ctx.sent","\n            for (var $__placeholder__0 = [], $__placeholder__1 = $__placeholder__2;\n                 $__placeholder__3 < arguments.length; $__placeholder__4++)\n              $__placeholder__5[$__placeholder__6 - $__placeholder__7] = arguments[$__placeholder__8];","$ctx.state = ($__placeholder__0) ? $__placeholder__1 : $__placeholder__2;\n        break","$ctx.maybeThrow()","$ctx.returnValue = $__placeholder__0","return $ctx.end()","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}