{"version":3,"file":"rules.js","sources":["../../../src/generator/rules.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"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","sourcesContent":["import { path, _ } from 'azk';\nimport { UIProxy } from 'azk/cli/ui';\nvar glob = require('glob');\n\nvar example_system = {\n  __type  : \"example\",\n  name    : \"example\",\n  depends : [],\n  image   : \"[repository]:[tag]\",\n  workdir : \"/azk/#{manifest.dir}\",\n  balancer: true,\n  command : \"# command to run app\",\n  mounts  : {\n    \"/azk/#{manifest.dir}\": { type: 'path', value: '.' },\n  },\n  envs: {\n    EXAMPLE: \"value\"\n  }\n};\n\nexport class BaseRule extends UIProxy {\n  constructor(...args) { super(...args) }\n\n  nameByDir(dir) {\n    return path.basename(dir).replace(/_/g, \"-\").replace(/[^a-zA-Z0-9-]/g, \"\");\n  }\n\n  makeSystemByDirs(dirs, suggestion, options = {}) {\n    return _.reduce(dirs, (systems, dir) => {\n      var system = {\n        dir: dir,\n        name: this.nameByDir(dir),\n      };\n\n      if (dir != options.root) {\n        var relative = path.relative(options.root, dir);\n        system.workdir = path.join(suggestion.workdir, relative);\n      }\n\n      systems[system.name] = _.extend({}, suggestion, system);\n      this.ok('generator.found', systems[system.name]);\n      return systems;\n    }, {});\n  }\n\n  searchSystemsByFile(dir, file_name) {\n    var patterns = [\n      path.join(dir, file_name),\n      path.join(dir, \"*\", file_name),\n    ]\n\n    var files = _.reduce(patterns, (files, pattern) => {\n      return files.concat(glob.sync(pattern));\n    }, []);\n\n    return _.map(files, (file) => { return path.dirname(file) });\n  }\n}\n\nexport { example_system };\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","var $__placeholder__0 = $__placeholder__1","\n            for (var $__placeholder__0 = [], $__placeholder__1 = 0;\n                 $__placeholder__2 < arguments.length; $__placeholder__3++)\n              $__placeholder__4[$__placeholder__5] = arguments[$__placeholder__6];","$traceurRuntime.superCall($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                   $__placeholder__3)","$traceurRuntime.spread($__placeholder__0)","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2,\n                                       $__placeholder__3)","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}