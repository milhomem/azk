{"version":3,"file":"balancer.js","sources":["../../../src/agent/balancer.js","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/15","@traceur/generated/TemplateParser/8","@traceur/generated/TemplateParser/14","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/11","@traceur/generated/TemplateParser/12","@traceur/generated/TemplateParser/9","@traceur/generated/TemplateParser/10","@traceur/generated/TemplateParser/13","@traceur/generated/TemplateParser/7","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"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","sourcesContent":["import { _, Q, path, fs, config, log, defer, async } from 'azk';\nimport { net } from 'azk/utils';\nimport { Tools } from 'azk/agent/tools';\nimport { AgentStartError } from 'azk/utils/errors';\n\nvar url     = require('url');\nvar forever = require('forever-monitor');\nvar MemoryStream    = require('memorystream');\nvar MemcachedDriver = require('memcached');\n\n// TODO: Reaplce forever for a better solution :/\nvar Balancer = {\n  memcached: null,\n  hipache  : null,\n  mem_client : null,\n\n  get memCached() {\n    if (!this.mem_client) {\n      var socket = config('paths:memcached_socket');\n      this.mem_client = new MemcachedDriver(socket);\n    }\n    return this.mem_client;\n  },\n\n  removeAll(host) {\n    var key = 'frontend:' + host;\n    return Q.ninvoke(this.memCached, 'delete', key);\n  },\n\n  getBackends(host) {\n    var key = 'frontend:' + host;\n    return Q.ninvoke(this.memCached, 'get', key).then((entries) => {\n      return entries ? entries : [host];\n    });\n  },\n\n  addBackend(hosts, backend) {\n    return async(this, function* () {\n      for(var host of (_.isArray(hosts) ? hosts : [hosts])) {\n        var key = 'frontend:' + host\n        var entries = yield this.getBackends(host);\n        entries = this._removeEntry(entries, backend);\n        entries.push(backend);\n        yield Q.ninvoke(this.memCached, 'set', key, entries, 0);\n      }\n    });\n  },\n\n  removeBackend(hosts, backend) {\n    return async(this, function* () {\n      for(var host of (_.isArray(hosts) ? hosts : [hosts])) {\n        var key = 'frontend:' + host;\n        var entries = yield this.getBackends(host);\n        entries = this._removeEntry(entries, backend);\n        yield Q.ninvoke(this.memCached, 'set', key, entries, 0);\n      }\n    });\n  },\n\n  start() {\n    return Tools.async_status(\"balancer\", this, function* (change_status) {\n      if (!this.isRunnig()) {\n        var socket = config('paths:memcached_socket');\n        var ip     = net.calculateGatewayIp(config(\"agent:vm:ip\"))\n        var port   = yield net.getPort();\n\n        // Memcached\n        change_status(\"starting_memcached\");\n        yield this.start_memcached(socket);\n        change_status(\"started_memcached\");\n\n        // Hipache\n        change_status(\"starting_hipache\");\n        yield this.start_hipache(ip, port, socket);\n        change_status(\"started_hipache\");\n\n        // Dns server\n        change_status(\"starting_dns\");\n        yield this.start_dns(ip, port);\n        change_status(\"started_dns\");\n\n        // Socat\n        change_status(\"starting_socat\");\n        yield this.start_socat(ip, port);\n        change_status(\"started_socat\");\n      }\n    });\n  },\n\n  start_dns(ip, port) {\n    return this._run_system('dns', {\n      wait: false,\n    });\n  },\n\n  start_socat(ip, port) {\n    return this._run_system('balancer-redirect', {\n      wait: true,\n      envs: {\n        BALANCER_IP: ip,\n        BALANCER_PORT: port,\n      }\n    });\n  },\n\n  start_hipache(ip, port, socket) {\n    var pid  = config(\"paths:hipache_pid\");\n    var file = this._check_config(ip, port, socket);\n    var cmd = [ 'nvm', 'hipache', '--config', file ];\n\n    log.info(\"starting hipache\");\n    return this._start_service(cmd, pid).then((child) => {\n      this.hipache = child;\n      log.info(\"hipache started in %s port with file config\", port, file);\n      child.on('stop', () => {\n        log.info('hipache stoped');\n      });\n      child.on('exit:code', (code) => {\n        if (code && code != 0) {\n          log.error('hipache exit code: ' + code);\n        }\n      });\n      child.on('stdout', (data) => {\n        log.info('hipache: %s', data.toString().trim());\n      });\n      child.on('stderr', (data) => {\n        log.info('hipache: %s', data.toString().trim());\n      });\n    });\n  },\n\n  start_memcached(socket) {\n    // Remove socket\n    if (fs.existsSync(socket)) fs.unlinkSync(socket);\n    var pid = config(\"paths:memcached_pid\");\n    var cmd = [ 'nvm', 'memcachedjs', '--socket', socket ];\n\n    log.info(\"starting memcachedjs\");\n    return this._start_service(cmd, pid).then((child) => {\n      this.memcached = child;\n      log.info(\"memcachedjs started in socket: \", socket);\n      child.on('stop', () => {\n        log.info('memcached stoped');\n      });\n      child.on('exit:code', (code) => {\n        if (code && code != 0) {\n          log.error('memcached exit code: ' + code);\n        }\n      });\n      child.on('stdout', (data) => {\n        log.info('memcached: %s', data.toString().trim());\n      });\n      child.on('stderr', (data) => {\n        log.info('memcached: %s', data.toString().trim());\n      });\n    });\n  },\n\n  stop() {\n    if (this.isRunnig()) {\n      log.debug(\"call to stop balancer\");\n      return Tools.async_status(\"balancer\", this, function* (change_status) {\n        yield Q.all([\n          this._stop_system('balancer-redirect', change_status),\n          this._stop_system('dns', change_status),\n        ]);\n        yield this._stop_sub_service(\"hipache\", change_status);\n        yield this._stop_sub_service(\"memcached\", change_status);\n      });\n    } else {\n      return Q();\n    }\n  },\n\n  isRunnig() {\n    return (\n      (this.hipache && this.hipache.running) ||\n      (this.memcached && this.memcached.running)\n    );\n  },\n\n  _removeEntry(entries, backend) {\n    return _.filter(entries, (entry) => { return entry != backend });\n  },\n\n  _getSystem(system) {\n    var Manifest = require('azk/manifest').Manifest;\n    var manifest = new Manifest(config('paths:azk_root'), true);\n    return manifest.system(system, true);\n  },\n\n  _waitDocker() {\n    var promise = net.waitService(config(\"docker:host\"), 5, { context: \"dns\" });\n    return promise.then((success) => {\n      if (!success) {\n        throw new AgentStartError(t(errors.not_connect_docker));\n      }\n      return true;\n    });\n  },\n\n  // TODO: check if system is running\n  _run_system(system_name, options = {}) {\n    return async(this, function* () {\n      var system  = this._getSystem(system_name);\n\n      // Wait docker\n      yield this._waitDocker();\n\n      // Save outputs to use in error\n      var output = \"\";\n      options.stdout = new MemoryStream();\n      options.stdout.on('data', (data) => {\n        output += data.toString();\n      });\n\n      yield system.stop();\n      var result = yield system.scale(1, options);\n\n      if (!result) {\n        throw new Error(`Fail to start balancer (${system_name}): ${output}`);\n      }\n    });\n  },\n\n  _stop_system(system_name, change_status) {\n    return async(this, function* () {\n      var system = this._getSystem(system_name);\n\n      // Wait docker\n      yield this._waitDocker();\n\n      // Stop\n      change_status(\"stoping_\" + system_name);\n      yield system.scale(0);\n      change_status(\"stoped_\" + system_name);\n    });\n  },\n\n  _start_service(cmd, pid) {\n    cmd = [path.join(config('paths:azk_root'), 'bin', 'azk'), ...cmd];\n    return defer((resolve, reject, notify) => {\n      var child = forever.start(cmd, {\n        max : 1,\n        silent : true,\n        pidFile: pid\n      });\n\n      child.on('exit:code', () => {\n        reject();\n        process.kill(process.pid);\n      });\n      child.on('start', () => resolve(child));\n    });\n  },\n\n  _stop_sub_service(sub, change_status) {\n    return defer((resolve) => {\n      var service = this[sub];\n      if (service && service.running) {\n        change_status(\"stopping_\" + sub);\n        service.on('stop', () => {\n          change_status(\"stoped_\" + sub);\n          resolve();\n        });\n        process.kill(service.pid);\n      } else {\n        resolve();\n      }\n    });\n  },\n\n  _check_config(ip, port, memcached_socket) {\n    var file = config('paths:balancer_file');\n    var log  = path.join(config('paths:logs'), \"hipache_access.log\");\n\n    var data = {\n      user: process.getuid(),\n      server: {\n        accessLog: log,\n        workers: 3,\n        maxSockets: 100,\n        deadBackendTTL: 30\n      },\n      http: {\n        port: port,\n        bind: [\"127.0.0.1\", ip, \"::1\"]\n      },\n      driver: [\"memcached://\" + memcached_socket]\n    }\n\n    // set content\n    fs.writeFileSync(file, JSON.stringify(data, null, '  '));\n    return file;\n  }\n}\n\nexport { Balancer }\n\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","return $__placeholder__0(\n            $__placeholder__1,\n            this);","$traceurRuntime.generatorWrap","function($ctx) {\n      while (true) $__placeholder__0\n    }","\n        for (var $__placeholder__0 =\n                 $__placeholder__1[Symbol.iterator](),\n                 $__placeholder__2;\n             !($__placeholder__3 = $__placeholder__4.next()).done; ) {\n          $__placeholder__5;\n          $__placeholder__6;\n        }","$ctx.state = ($__placeholder__0) ? $__placeholder__1 : $__placeholder__2;\n        break","return $__placeholder__0","$ctx.sent","$ctx.maybeThrow()","return $ctx.end()","$traceurRuntime.spread($__placeholder__0)","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}