{"version":3,"file":"net.js","sources":["../../../src/utils/net.js","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/0","@traceur/generated/TemplateParser/1","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/3"],"names":[],"mappings":"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","sourcesContent":["import { Q, _, fs, defer, config } from 'azk';\n\nvar url         = require('url');\nvar nativeNet   = require('net');\nvar portrange   = config(\"agent:portrange_start\");\nvar nameservers = null;\n\nvar net = {\n  getPort() {\n    var port   = portrange;\n    portrange += 1;\n    var server = nativeNet.createServer();\n\n    return defer((done) => {\n      server.listen(port, (err) => {\n        server.once('close', () => {\n          done.resolve(port);\n        });\n        server.close();\n      });\n      server.on('error', (err) => {\n        done.resolve(this.getPort());\n      });\n    });\n  },\n\n  calculateNetIp(ip) {\n    return ip.replace(/^(.*)\\..*$/, \"$1.0/24\");\n  },\n\n  calculateGatewayIp(ip) {\n    return ip.replace(/^(.*)\\..*$/, \"$1.1\");\n  },\n\n  nameServers() {\n    if (nameservers == null) {\n      nameservers = [config(\"agent:dns:ip\")];\n\n      var file = \"/etc/resolv.conf\";\n      if (fs.existsSync(file)) {\n        var lines = fs.readFileSync(file).toString().split(\"\\n\");\n        _.each(lines, (line) => {\n          if (line.match(/^nameserver.*$/)) {\n            nameservers.push(line.replace(/^nameserver\\s{1,}(.*)/, \"$1\"));\n          }\n        });\n      }\n    }\n    return nameservers;\n  },\n\n  waitService(address, retry = 15, opts = {}) {\n    opts = _.defaults(opts, {\n      timeout: 10000,\n      retry_if: () => { return Q(true); }\n    });\n\n    // Parse options to try connect\n    address = url.parse(address);\n    address = {\n      host: address.hostname,\n      port: address.port,\n      path: address.protocol == \"unix:\" ? address.path : null\n    };\n\n    return defer((resolve, reject, notify) => {\n      var client   = null;\n      var attempts = 1, max = retry;\n      var connect  = () => {\n        var t = null;\n        notify(_.merge({\n          type: 'try_connect', attempts, max, context: opts.context\n        }, address));\n\n        client = nativeNet.connect(address, function() {\n          client.end();\n          clearTimeout(t);\n          resolve(true);\n        });\n\n        t = setTimeout(() => {\n          client.end();\n\n          opts.retry_if().then((result) => {\n            if (attempts >= max || !result) return resolve(false);\n            attempts += 1;\n            connect();\n          }, () => resolve(false));\n        }, opts.timeout);\n\n        // Ignore connect error\n        client.on('error', (error) => { return false; });\n      }\n      connect();\n    });\n  },\n\n  // TODO: change for a generic service wait function\n  waitForwardingService(host, port, retry = 15, timeout = 10000) {\n    return defer((resolve, reject, notify) => {\n      var client   = null;\n      var attempts = 1, max = retry;\n      var connect  = () => {\n        notify({ type: 'try_connect', attempts, max });\n\n        var timeout_func = function() {\n          attempts += 1;\n          connect();\n        }\n\n        client = nativeNet.connect({ host, port}, function() {\n          client.on('data', function(data) {\n            client.destroy();\n            resolve();\n          });\n          if (attempts <= max) {\n            client.setTimeout(timeout, timeout_func);\n          } else {\n            client.destroy();\n            reject();\n          }\n        });\n\n        client.on('error', (error) => {\n          if(error.code == 'ECONNREFUSED' && attempts <= max) {\n            setTimeout(timeout_func, timeout);\n          } else {\n            reject(error)\n          }\n        });\n      }\n\n      connect();\n    });\n  },\n}\n\nexport default net;\n","var __moduleName = $__placeholder__0;","require($__placeholder__0)","var $__default = $__placeholder__0","module.exports = $__placeholder__0;","get $__placeholder__0() { return $__placeholder__1; }","__esModule: true"]}